const mysql = require('mysql2');

// Configuration de la base de donn√©es
const dbConfig = {
  host: 'localhost',
  user: 'root',
  password: '',
  database: 'ecommerce',
  multipleStatements: true
};

// Cr√©er la connexion
const connection = mysql.createConnection(dbConfig);

console.log('üóëÔ∏è  Suppression des tables existantes...');

// Fonction pour ex√©cuter une requ√™te SQL
const executeQuery = (query, description) => {
  return new Promise((resolve, reject) => {
    console.log(`üìÑ ${description}`);
    
    connection.query(query, (err, results) => {
      if (err) {
        console.error(`‚ùå Erreur: ${err.message}`);
        reject(err);
        return;
      }

      console.log(`‚úÖ ${description} ex√©cut√© avec succ√®s`);
      resolve(results);
    });
  });
};

// Fonction principale
const dropTables = async () => {
  try {
    // Connexion √† la base de donn√©es
    await new Promise((resolve, reject) => {
      connection.connect((err) => {
        if (err) {
          console.error('‚ùå Erreur de connexion √† MySQL:', err);
          reject(err);
          return;
        }
        console.log('‚úÖ Connexion √† MySQL r√©ussie!');
        resolve();
      });
    });

    // D√©sactiver les v√©rifications de cl√©s √©trang√®res
    await executeQuery('SET FOREIGN_KEY_CHECKS = 0', 'D√©sactivation des v√©rifications de cl√©s √©trang√®res');

    // Supprimer les tables dans l'ordre inverse des d√©pendances
    await executeQuery('DROP TABLE IF EXISTS order_items', 'Suppression de la table order_items');
    await executeQuery('DROP TABLE IF EXISTS orders', 'Suppression de la table orders');
    await executeQuery('DROP TABLE IF EXISTS products', 'Suppression de la table products');
    await executeQuery('DROP TABLE IF EXISTS categories', 'Suppression de la table categories');

    // R√©activer les v√©rifications de cl√©s √©trang√®res
    await executeQuery('SET FOREIGN_KEY_CHECKS = 1', 'R√©activation des v√©rifications de cl√©s √©trang√®res');

    console.log('\nüéâ Toutes les tables ont √©t√© supprim√©es avec succ√®s!');
    console.log('\nüìã Tables supprim√©es:');
    console.log('   - order_items');
    console.log('   - orders');
    console.log('   - products');
    console.log('   - categories');

  } catch (error) {
    console.error('‚ùå Erreur lors de la suppression:', error);
    process.exit(1);
  } finally {
    connection.end();
  }
};

// Ex√©cution du script
dropTables(); 